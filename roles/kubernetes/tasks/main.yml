---
# tasks file for kubernetes
# ubuntu 18.04.2 LTS (Bionic Beaver)

# TODO disable swap without reboot and permenantly
- name: disable swap now
  shell: swapoff -a
  when: ansible_swaptotal_mb > 0

# - name: disable swap for reboot
#   lineinfile:
#     dest: /etc/fstab
#     regexp: '^[^#](.*swap.*)$'
#     line: '#\1'
#     backrefs: yes

- name: disable swap for reboot
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: add docker apt-key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Set the stable docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} edge"
    state: present
    update_cache: yes

# install Container Runtime Interface (docker)
- name: install CRI docker
  package:
      name: docker-ce=18.06.1~ce~3-0~ubuntu
      state: present

- name: add kube utilities apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

# bionic fails atm
- name: add kube apt repo
  apt_repository:
    repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    update_cache: yes

# install kube utilitites
- name: install kubernetes utilities kubeadmn kubelet kubectl
  package:
      name: "{{ item }}"
      state: present
  with_items:
      - kubeadm
      - kubelet
      - kubectl

# https://github.com/kubernetes/kubeadm/issues/787
# workarounds for now
- name: link systemds resolv.conf into /etc/resolv.conf instead of 18.04s
  file:
    path: /etc/resolv.conf
    src: /run/systemd/resolve/resolv.conf
    state: link
    force: yes

# init kubeadm
- name: init kubernetes
  shell: kubeadm init --apiserver-advertise-address={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} --pod-network-cidr=10.100.0.0/16

- name: kube dir for root
  file:
    path: /root/.kube
    state: directory
    mode: 0755

- name: kube config file for root
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    mode: 0600
    remote_src: yes

# set up NCI calico
- name: set up Calico
  shell: kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml

- name: set up Calico 2
  shell: kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml

- name: kube dir for koalatea
  file:
    path: /home/koalatea/.kube
    state: directory
    mode: 0755

- name: kube config file for koalatea
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/koalatea/.kube/config
    mode: 0600
    remote_src: yes

- name: unset master node taint so pods can run here
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-

# - name: generate join command
#   command: kubeadm token create --print-join-command
#   register: join_command

# - name: Save join command to local file
#   local_action: copy content="{{ join_command.stdout_lines[0] }}" dest='./join-command'